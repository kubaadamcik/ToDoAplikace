@using Microsoft.AspNetCore.Mvc.Formatters
@inherits LayoutComponentBase
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>ToDoAplikace</PageTitle>


<div class="page">
    <header>
        <div class="navbar shadow" style="background-color: lightgreen">
            <div class="container-fluid">
                <a class="navbar-brand" href="">ToDo</a>
                <ul class="navbar-nav">
                    <li class="nav-item">
                        @if (!NavigationManager.Uri.Contains("login") && !NavigationManager.Uri.Contains("register"))
                        {
                            if (username is not null)
                            {
                                <p>Vítej @username</p>
                                <button class="btn-secondary" @onclick="Logout">Odhlásit se</button>
                            }
                            else
                            {
                                <button class="btn-primary" @onclick="Login">Přihlásit se</button>
                            }
                        }
                    </li>
                </ul>
            </div>
        </div>
    </header>


    <main>
        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code
{
    private string? username { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var user = await AuthenticationStateProvider.GetAuthenticationStateAsync();

        if (user.User.Identity.IsAuthenticated)
        {
            username = user.User.Identity.Name;
        }
    }

    private async Task Logout()
    {
        var request = await JSRuntime.InvokeAsync<bool>("auth.logout");

        if (request)
        {
            NavigationManager.NavigateTo(NavigationManager.Uri, true);
        }
    }

    private async Task Login()
    {
        NavigationManager.NavigateTo("/login");
    }
}
